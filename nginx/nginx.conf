
map $accept $file_suffix {
    default   "";

    "application/rdf+xml"       ".rdf";
    "application/n-triples"     ".nt";
    "application/trix"          ".xml";
    "application/trig"          ".trig";
    "application/x-binary"      ".brf";
    "application/n-quads"       ".nq";
    "application/activity+json" ".activity.json";
    "application/ld+json"       ".jsonld";
    "application/rdf+json"      ".rj";
    "application/xhtml+xml"     ".xhtml";
    "application/zip"           ".zip";

    "text/html"                 ".html";
    "text/turtle"               ".ttl";
    "text/n3"                   ".n3";
}

types {
    application/rdf+xml         rdf;
    application/n-triples       nt;
    application/trix            xml;
    application/trig            trig;
    application/x-binary        brf;
    application/n-quads         nq;
    application/activity+json   activity.json;
    application/ld+json         jsonld;
    application/rdf+json        rj;
    application/xhtml+xml       xhtml;
    application/zip             zip;

    text/html                   html;
    text/turtle                 ttl;
    text/n3                     n3;
}

init_by_lua_block {
    require("conneg")
    conneg.accept.register("data", "application/rdf+xml,application/n-triples,application/trix,application/trig,application/x-binary,application/n-quads,application/ld+json,application/rdf+json,application/xhtml+xml,application/zip,text/turtle,text/html")
}

server {
    server_name api.openraadsinformatie.nl;

    root /www/data/api;

    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
    add_header 'Access-Control-Expose-Headers' '*' always;
    add_header Vary Accept always;

    # Temporary for backwards compatibility, issue #9
    location ^~ /v1/resolve/ori-static {
        proxy_pass https://storage.googleapis.com/ori-static;
        proxy_redirect default;
    }

    # Temporary for backwards compatibility, issue #9
    location ^~ /v1/resolve/ggm {
        proxy_pass https://storage.googleapis.com/ggm;
        proxy_redirect default;
    }

    # Temporary for backwards compatibility, issue #9
    location ^~ /v1/resolve/notubiz {
        proxy_pass https://storage.googleapis.com/notubiz;
        proxy_redirect default;
    }

    # Temporary for backwards compatibility, issue #9
    location ^~ /v1/resolve/ibabs {
        proxy_pass https://storage.googleapis.com/ibabs;
        proxy_redirect default;
    }

    # Temporary for backwards compatibility, issue #9
    location ^~ /v1/resolve/greenvalley {
        proxy_pass https://storage.googleapis.com/greenvalley;
        proxy_redirect default;
    }

    # Temporary for backwards compatibility, issue #9
    location ^~ /v1/resolve/gemeenteoplossingen {
        proxy_pass https://storage.googleapis.com/gemeenteoplossingen;
        proxy_redirect default;
    }

    # Temporary for backwards compatibility, issue #9
    location ^~ /v1/resolve/parlaeus {
        proxy_pass https://storage.googleapis.com/parlaeus;
        proxy_redirect default;
    }

    location ^~ /v1/resolve {
        proxy_pass https://storage.googleapis.com/ori-static;
        proxy_redirect default;
    }

    location /v1/ {
        autoindex on;

        set_by_lua_block $accept {
            local newtype = ngx.var.http_accept or "*/*"
            if newtype:len() > 255 or newtype:len() == 0 then
                return ngx.var.http_accept
            else
                newtype = conneg.accept.negotiate(newtype,"data")
                if newtype == nil then
                    return ngx.var.http_accept
                else
                    return newtype
                end
            end
        }

        try_files $uri$file_suffix $uri$ext $uri $uri/ $uri.jsonld $uri.activity.json =404;
    }

    location / {
        return 404;
    }
}

server {
    listen 80 default_server;

    root /www/data;

    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
    add_header 'Access-Control-Expose-Headers' '*' always;
    add_header Vary Accept always;

    # Convert id strings (e.g. /21431.format) to `/<md5(id)>/id.format`
    location ~ "^/(?<id>[0-9]+)(\.[a-z0-9]+)?$"  {
        set_md5 $digest $id;
        rewrite .* /$digest$request_uri;
    }

    # Split the md5 path into 8 four-char subpaths followed by the document id (e.g. `/ab000000/00000000/00000000/00000000/21431.format`) in a very cumbersome way
    location ~ "^/(?<x1>[0-9a-f]{8})(?<x3>[0-9a-f]{8})(?<x5>[0-9a-f]{8})(?<x7>[0-9a-f]{8})/(?<id>[0-9]*)(?<ext>\.[a-z0-9]+)?$" {
        if ($request_method = OPTIONS ) {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            add_header 'Access-Control-Expose-Headers' '*' always;
            # Cache for 20 days
            add_header 'Access-Control-Max-Age' 1728000;
            add_header Content-Length 0 always;
            add_header Content-Type text/plain always;
            add_header Vary Accept always;
            return 204;
        }

        set_by_lua_block $accept {
            local newtype = ngx.var.http_accept or "*/*"
            if newtype:len() > 255 or newtype:len() == 0 then
                return ngx.var.http_accept
            else
                newtype = conneg.accept.negotiate(newtype,"data")
                if newtype == nil then
                    return ngx.var.http_accept
                else
                    return newtype
                end
            end
        }

        rewrite .* /id/$x1/$x3/$x5/$x7/latest/$id$ext break;
        try_files $uri$file_suffix $uri$ext $uri $uri.jsonld =404;
    }

    location / {
        index index.html;
    }
}
